/* THIS FILE IS AUTO-GENERATED BY KESO! DON'T EDIT */

#ifndef __C11_INTEGER_H__
#define __C11_INTEGER_H__
#include "keso_object_pointer.h"
#include "keso_types.h"

#define C11_INTEGER_ID ((class_id_t)11)

/* object data */
typedef struct {
/* c11_Integer */
/* c10_Number */
/* c1_Object */
OBJECT_HEADER
/* c1_Object */
/* c10_Number */
/* c11_Integer */
} c11_Integer_t;
#define C11_INTEGER_OBJ(_obj_) ((c11_Integer_t*)(_obj_))
#define KESO_ALLOC_C11_INTEGER() KESO_ALLOC(C11_INTEGER_ID,sizeof(c11_Integer_t),0)
#define KESO_ALLOC_STACK_C11_INTEGER(_mem_) keso_alloc_stack((object_pointer)&(_mem_), C11_INTEGER_ID,sizeof(c11_Integer_t),0)
#define KESO_ALLOC_INLINE_C11_INTEGER() KESO_ALLOC(C11_INTEGER_ID,sizeof(c11_Integer_t),0)

/* class methods prototypes */
/* c11_Integer_m2__clinit_ #non_blocking */
/* <clinit>()V */
void c11_Integer_m2__clinit_(void);
/* c11_Integer_m1_toString #non_blocking */
/* toString(I)Ljava/lang/String; */
object_pointer c11_Integer_m1_toString(jint i0);



#endif /* !defined(__C11_INTEGER_H__) */
