/* THIS FILE IS AUTO-GENERATED BY KESO! DON'T EDIT */

#ifndef __C9_QUEUEELEMENT_H__
#define __C9_QUEUEELEMENT_H__
#include "keso_object_pointer.h"
#include "keso_types.h"

#define C9_QUEUEELEMENT_ID ((class_id_t)9)

/* object data */
typedef struct {
/* c9_QueueElement */
	object_pointer c9f1_next;
/* c1_Object */
OBJECT_HEADER
/* c1_Object */
	jint c9f2_value;
/* c9_QueueElement */
} c9_QueueElement_t;
#define C9_QUEUEELEMENT_OBJ(_obj_) ((c9_QueueElement_t*)((object_pointer*)(_obj_)-1))
#define ACCFIELD_C9_QUEUEELEMENT_C9F1_NEXT(_obj_) (C9_QUEUEELEMENT_OBJ(_obj_)->c9f1_next)
#define ACCFIELD_C9_QUEUEELEMENT_C9F2_VALUE(_obj_) (C9_QUEUEELEMENT_OBJ(_obj_)->c9f2_value)
#define KESO_ALLOC_C9_QUEUEELEMENT() KESO_ALLOC(C9_QUEUEELEMENT_ID,sizeof(c9_QueueElement_t),1)
#define KESO_ALLOC_STACK_C9_QUEUEELEMENT(_mem_) keso_alloc_stack((object_pointer)&(_mem_), C9_QUEUEELEMENT_ID,sizeof(c9_QueueElement_t),1)
#define KESO_ALLOC_INLINE_C9_QUEUEELEMENT() KESO_ALLOC(C9_QUEUEELEMENT_ID,sizeof(c9_QueueElement_t),1)

/* class methods prototypes */



#endif /* !defined(__C9_QUEUEELEMENT_H__) */
