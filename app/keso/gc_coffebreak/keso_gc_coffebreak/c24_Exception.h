/* THIS FILE IS AUTO-GENERATED BY KESO! DON'T EDIT */

#ifndef __C24_EXCEPTION_H__
#define __C24_EXCEPTION_H__
#include "keso_object_pointer.h"
#include "keso_types.h"

#define C24_EXCEPTION_ID ((class_id_t)24)

/* object data */
typedef struct {
/* c24_Exception */
/* c23_Throwable */
	object_pointer c23f1_message;
/* c1_Object */
OBJECT_HEADER
/* c1_Object */
/* c23_Throwable */
/* c24_Exception */
} c24_Exception_t;
#define C24_EXCEPTION_OBJ(_obj_) ((c24_Exception_t*)((object_pointer*)(_obj_)-1))
#define ACCFIELD_C24_EXCEPTION_C23F1_MESSAGE(_obj_) (C24_EXCEPTION_OBJ(_obj_)->c23f1_message)
#define KESO_ALLOC_C24_EXCEPTION() KESO_ALLOC(C24_EXCEPTION_ID,sizeof(c24_Exception_t),1)
#define KESO_ALLOC_STACK_C24_EXCEPTION(_mem_) keso_alloc_stack((object_pointer)&(_mem_), C24_EXCEPTION_ID,sizeof(c24_Exception_t),1)
#define KESO_ALLOC_INLINE_C24_EXCEPTION() KESO_ALLOC(C24_EXCEPTION_ID,sizeof(c24_Exception_t),1)

/* class methods prototypes */



#endif /* !defined(__C24_EXCEPTION_H__) */
