/* THIS FILE IS AUTO-GENERATED BY KESO! DON'T EDIT */

#ifndef __C23_STRING_H__
#define __C23_STRING_H__
#include "keso_object_pointer.h"
#include "keso_types.h"

#define C23_STRING_ID ((class_id_t)23)

/* object data */
typedef struct {
/* c23_String */
	object_pointer c23f1_value;
/* c1_Object */
OBJECT_HEADER
/* c1_Object */
/* c23_String */
} c23_String_t;
#define C23_STRING_OBJ(_obj_) ((c23_String_t*)((object_pointer*)(_obj_)-1))
#define ACCFIELD_C23_STRING_C23F1_VALUE(_obj_) (C23_STRING_OBJ(_obj_)->c23f1_value)
#define KESO_ALLOC_C23_STRING() KESO_ALLOC(C23_STRING_ID,sizeof(c23_String_t),1)
#define KESO_ALLOC_STACK_C23_STRING(_mem_) keso_alloc_stack((object_pointer)&(_mem_), C23_STRING_ID,sizeof(c23_String_t),1)
#define KESO_ALLOC_INLINE_C23_STRING() KESO_ALLOC(C23_STRING_ID,sizeof(c23_String_t),1)

/* class methods prototypes */
/* c23_String_m6__clinit_ #non_blocking */
/* <clinit>()V */
void c23_String_m6__clinit_(void);
/* c23_String_m3_getChars #non_blocking */
/* getChars(II[CI)V */
void c23_String_m3_getChars(object_pointer obj0, jint i2, object_pointer obj3, jint i4);
/* c23_String_m1__init_ #non_blocking */
/* <init>([CII)V */
void c23_String_m1__init_(object_pointer obj0, object_pointer obj1, jint i2, jint i3);
/* c23_String_m8_out_of_bounds #non_blocking */
/* out_of_bounds()Ljava/lang/StringIndexOutOfBoundsException; */
object_pointer c23_String_m8_out_of_bounds(object_pointer obj0);



#endif /* !defined(__C23_STRING_H__) */
