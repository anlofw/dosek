/* THIS FILE IS AUTO-GENERATED BY KESO! DON'T EDIT */

#ifndef __C6_THREAD_H__
#define __C6_THREAD_H__
#include "keso_object_pointer.h"
#include "keso_os.h"
#include "keso_types.h"

#define C6_THREAD_ID ((class_id_t)6)

/* object data */
typedef struct {
/* c6_Thread */
/* c1_Object */
OBJECT_HEADER
/* c1_Object */
	object_pointer KESO_CONST _user_object;
	KESO_CONST TaskType _task_id;
/* c6_Thread */
} c6_Thread_t;
#define C6_THREAD_OBJ(_obj_) ((c6_Thread_t*)(_obj_))
#define KESO_ALLOC_C6_THREAD() KESO_ALLOC(C6_THREAD_ID,sizeof(c6_Thread_t),0)
#define KESO_ALLOC_STACK_C6_THREAD(_mem_) keso_alloc_stack((object_pointer)&(_mem_), C6_THREAD_ID,sizeof(c6_Thread_t),0)
#define KESO_ALLOC_INLINE_C6_THREAD() KESO_ALLOC(C6_THREAD_ID,sizeof(c6_Thread_t),0)

/* class methods prototypes */



#endif /* !defined(__C6_THREAD_H__) */
