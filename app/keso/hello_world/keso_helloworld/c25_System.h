/* THIS FILE IS AUTO-GENERATED BY KESO! DON'T EDIT */

#ifndef __C25_SYSTEM_H__
#define __C25_SYSTEM_H__
#include "keso_object_pointer.h"
#include "keso_types.h"

#define C25_SYSTEM_ID ((class_id_t)25)

/* object data */
typedef struct {
/* c25_System */
/* c1_Object */
OBJECT_HEADER
/* c1_Object */
/* c25_System */
} c25_System_t;
#define C25_SYSTEM_OBJ(_obj_) ((c25_System_t*)(_obj_))
#define KESO_ALLOC_C25_SYSTEM() KESO_ALLOC(C25_SYSTEM_ID,sizeof(c25_System_t),0)
#define KESO_ALLOC_STACK_C25_SYSTEM(_mem_) keso_alloc_stack((object_pointer)&(_mem_), C25_SYSTEM_ID,sizeof(c25_System_t),0)
#define KESO_ALLOC_INLINE_C25_SYSTEM() KESO_ALLOC(C25_SYSTEM_ID,sizeof(c25_System_t),0)

/* class methods prototypes */
/* c25_System_m3__clinit_ #non_blocking */
/* <clinit>()V */
void c25_System_m3__clinit_(void);
/* c25_System_m1_nanoTime #non_blocking */
/* nanoTime()J */
jlong c25_System_m1_nanoTime(void);
/* c25_System_m2_getProperty #non_blocking */
/* getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; */
object_pointer c25_System_m2_getProperty(object_pointer obj0, object_pointer obj1);



#endif /* !defined(__C25_SYSTEM_H__) */
