/* THIS FILE IS AUTO-GENERATED BY KESO! DON'T EDIT */

#include "global.h"
#include "domains.h"
void __keso_printc(unsigned char c) { kout << c; }
#include "c8_DebugOut.h"
#include "i33_Closeable.h"
#include "c6_Thread.h"
#include "c9_TaskService.h"
#include "c1_Object.h"
#include "c4_InputStream.h"
#include "c15_StringBuilder.h"
#include "i35_Runnable.h"
#include "c30_DebugOutPrintStream.h"
#include "c14_Error.h"
#include "c18_Number.h"
#include "c21_Character.h"
#include "c31_NullPrintStream.h"
#include "c7_HelloWorld.h"
#include "c19_Long.h"
#include "c26_Math.h"
#include "c27_OutputStream.h"
#include "c13_StringIndexOutOfBoundsException.h"
#include "c20_Integer.h"
#include "c10_Throwable.h"
#include "i34_NonCopyable.h"
#include "c16_A.h"
#include "c17_B.h"
#include "c5_Alarm.h"
#include "c29_PrintStream.h"
#include "c32_DebugOutOutputStream.h"
#include "c11_Exception.h"
#include "c22_Class.h"
#include "c23_String.h"
#include "c24_Config.h"
#include "c25_System.h"
#include "c12_RuntimeException.h"
#include "c28_FilterOutputStream.h"

 KESO_CONST code_t dispatch_table[] = {
/* println(J)V 	 off:0 cls:29 len:3 candidates:2 */
/* 0 c29 */ 	((code_t)0),
/* 1 c30 */ 	((code_t)c30_DebugOutPrintStream_m4_println),
/* 2 c31 */ 	((code_t)0),
/* println(Ljava/lang/String;)V 	 off:3 cls:29 len:3 candidates:2 */
/* 3 c29 */ 	((code_t)0),
/* 4 c30 */ 	((code_t)c30_DebugOutPrintStream_m6_println),
/* 5 c31 */ 	((code_t)0),
/* println(I)V 	 off:6 cls:29 len:3 candidates:2 */
/* 6 c29 */ 	((code_t)0),
/* 7 c30 */ 	((code_t)c30_DebugOutPrintStream_m8_println),
/* 8 c31 */ 	((code_t)0),
/* print(Ljava/lang/String;)V 	 off:9 cls:29 len:3 candidates:2 */
/* 9 c29 */ 	((code_t)0),
/* 10 c30 */ 	((code_t)c30_DebugOutPrintStream_m7_print),
/* 11 c31 */ 	((code_t)0),
};

/* use the CLASS(id) macro to access the class store! */
/* use the CLS_ROFF(id) macro to access the reference offset,
 * CLS_SIZE(id) for the size and CLS_IFACES(id) for the interfaces. */
KESO_CONST class_t class_store[] = {
 /* 0 RESERVED */
 /* 1	java/lang/Object */
 {sizeof(c1_Object_t), 0},
 /* 2	[B */
 {sizeof(jbyte), 0},
 /* 3	[C */
 {sizeof(jchar), 0},
 /* 4	java/io/InputStream */
 {sizeof(c4_InputStream_t), 0},
 /* 5	keso/core/Alarm */
 {sizeof(c5_Alarm_t), 0},
 /* 6	java/lang/Thread */
 {sizeof(c6_Thread_t), 0},
 /* 7	test/HelloWorld */
 {sizeof(c7_HelloWorld_t), 1},
 /* 8	keso/io/DebugOut */
 {sizeof(c8_DebugOut_t), 0},
 /* 9	keso/core/TaskService */
 {sizeof(c9_TaskService_t), 0},
 /* 10	java/lang/Throwable */
 {sizeof(c10_Throwable_t), 1},
 /* 11	java/lang/Exception */
 {sizeof(c11_Exception_t), 1},
 /* 12	java/lang/RuntimeException */
 {sizeof(c12_RuntimeException_t), 1},
 /* 13	java/lang/StringIndexOutOfBoundsException */
 {sizeof(c13_StringIndexOutOfBoundsException_t), 1},
 /* 14	java/lang/Error */
 {sizeof(c14_Error_t), 1},
 /* 15	java/lang/StringBuilder */
 {sizeof(c15_StringBuilder_t), 1},
 /* 16	test/A */
 {sizeof(c16_A_t), 0},
 /* 17	test/B */
 {sizeof(c17_B_t), 0},
 /* 18	java/lang/Number */
 {sizeof(c18_Number_t), 0},
 /* 19	java/lang/Long */
 {sizeof(c19_Long_t), 0},
 /* 20	java/lang/Integer */
 {sizeof(c20_Integer_t), 0},
 /* 21	java/lang/Character */
 {sizeof(c21_Character_t), 0},
 /* 22	java/lang/Class */
 {sizeof(c22_Class_t), 0},
 /* 23	java/lang/String */
 {sizeof(c23_String_t), 1},
 /* 24	keso/core/Config */
 {sizeof(c24_Config_t), 0},
 /* 25	java/lang/System */
 {sizeof(c25_System_t), 0},
 /* 26	java/lang/Math */
 {sizeof(c26_Math_t), 0},
 /* 27	java/io/OutputStream */
 {sizeof(c27_OutputStream_t), 0},
 /* 28	java/io/FilterOutputStream */
 {sizeof(c28_FilterOutputStream_t), 1},
 /* 29	java/io/PrintStream */
 {sizeof(c29_PrintStream_t), 1},
 /* 30	keso/io/DebugOutPrintStream */
 {sizeof(c30_DebugOutPrintStream_t), 1},
 /* 31	keso/io/NullPrintStream */
 {sizeof(c31_NullPrintStream_t), 1},
 /* 32	keso/io/DebugOutOutputStream */
 {sizeof(c32_DebugOutOutputStream_t), 0},
};

/* global strings */
struct str2_s {
	ARRAY_HEADER
	const jchar data[3];
};
struct str3_s {
	ARRAY_HEADER
	const jchar data[4];
};
struct str4_s {
	ARRAY_HEADER
	const jchar data[5];
};
struct str7_s {
	ARRAY_HEADER
	const jchar data[8];
};
struct str8_s {
	ARRAY_HEADER
	const jchar data[9];
};
struct str12_s {
	ARRAY_HEADER
	const jchar data[13];
};
struct str19_s {
	ARRAY_HEADER
	const jchar data[20];
};
struct str23_s {
	ARRAY_HEADER
	const jchar data[24];
};
struct str51_s {
	ARRAY_HEADER
	const jchar data[52];
};
static struct str19_s str10_arr ALIGN4  ={
/*.class_id=*/CHAR_ARRAY_ID, /*.size=*/19, {'\t','h','a','s','h',' ','v','a','l','u','e',' ','a','g','a','i','n',':',' ','\0'}/* data */,
};
c23_String_t ALIGN4 str10={
(object_pointer)&str10_arr /* value */,/*.class_id=*/C23_STRING_ID, 
};
static struct str8_s str8_arr ALIGN4  ={
/*.class_id=*/CHAR_ARRAY_ID, /*.size=*/8, {'\t','s','t','a','r','t',':',' ','\0'}/* data */,
};
c23_String_t ALIGN4 str8={
(object_pointer)&str8_arr /* value */,/*.class_id=*/C23_STRING_ID, 
};
static struct str7_s str9_arr ALIGN4  ={
/*.class_id=*/CHAR_ARRAY_ID, /*.size=*/7, {'\t','s','t','o','p',':',' ','\0'}/* data */,
};
c23_String_t ALIGN4 str9={
(object_pointer)&str9_arr /* value */,/*.class_id=*/C23_STRING_ID, 
};
static struct str2_s str0_arr ALIGN4  ={
/*.class_id=*/CHAR_ARRAY_ID, /*.size=*/2, {'\r','\n','\0'}/* data */,
};
c23_String_t ALIGN4 str0={
(object_pointer)&str0_arr /* value */,/*.class_id=*/C23_STRING_ID, 
};
static struct str3_s str7_arr ALIGN4  ={
/*.class_id=*/CHAR_ARRAY_ID, /*.size=*/3, {' ','n','s','\0'}/* data */,
};
c23_String_t ALIGN4 str7={
(object_pointer)&str7_arr /* value */,/*.class_id=*/C23_STRING_ID, 
};
static struct str23_s str2_arr ALIGN4  ={
/*.class_id=*/CHAR_ARRAY_ID, /*.size=*/23, {'H','e','l','l','o','W','o','r','l','d',' ','c','o','n','s','t','r','u','c','t','o','r','\n','\0'}/* data */,
};
c23_String_t ALIGN4 str2={
(object_pointer)&str2_arr /* value */,/*.class_id=*/C23_STRING_ID, 
};
static struct str8_s str6_arr ALIGN4  ={
/*.class_id=*/CHAR_ARRAY_ID, /*.size=*/8, {'R','u','n','t','i','m','e',' ','\0'}/* data */,
};
c23_String_t ALIGN4 str6={
(object_pointer)&str6_arr /* value */,/*.class_id=*/C23_STRING_ID, 
};
static struct str51_s str3_arr ALIGN4  ={
/*.class_id=*/CHAR_ARRAY_ID, /*.size=*/51, {'Y','o','u',' ','s','u','c','c','e','s','s','f','u','l','l','y',' ','c','o','m','p','i','l','e','d',' ','a','n','d',' ','r','a','n',' ','K','E','S','O','.',' ','G','o','o','d','b','y','e','.','.','.','\n','\0'}/* data */,
};
c23_String_t ALIGN4 str3={
(object_pointer)&str3_arr /* value */,/*.class_id=*/C23_STRING_ID, 
};
static struct str12_s str4_arr ALIGN4  ={
/*.class_id=*/CHAR_ARRAY_ID, /*.size=*/12, {'h','a','s','h',' ','v','a','l','u','e',':',' ','\0'}/* data */,
};
c23_String_t ALIGN4 str4={
(object_pointer)&str4_arr /* value */,/*.class_id=*/C23_STRING_ID, 
};
static struct str2_s str11_arr ALIGN4  ={
/*.class_id=*/CHAR_ARRAY_ID, /*.size=*/2, {'m','1','\0'}/* data */,
};
c23_String_t ALIGN4 str11={
(object_pointer)&str11_arr /* value */,/*.class_id=*/C23_STRING_ID, 
};
static struct str2_s str5_arr ALIGN4  ={
/*.class_id=*/CHAR_ARRAY_ID, /*.size=*/2, {'m','2','\0'}/* data */,
};
c23_String_t ALIGN4 str5={
(object_pointer)&str5_arr /* value */,/*.class_id=*/C23_STRING_ID, 
};
static struct str4_s str1_arr ALIGN4  ={
/*.class_id=*/CHAR_ARRAY_ID, /*.size=*/4, {'n','u','l','l','\0'}/* data */,
};
c23_String_t ALIGN4 str1={
(object_pointer)&str1_arr /* value */,/*.class_id=*/C23_STRING_ID, 
};

/* translation callbacks */

/* Task management */
c6_Thread_t ALIGN4 __DOSEK_APPDATA_dom1__helloworldTask_obj = {/*.class_id=*/C6_THREAD_ID,
	((object_pointer) ((object_pointer*) &__DOSEK_APPDATA_dom1__helloworldTask_user_obj+1)) /* _user_object */,
	helloworldTask /* _task_id */};

/* Alarm management */
c5_Alarm_t ALIGN4 __DOSEK_APPDATA_dom1__helloAlarm_obj = {/*.class_id=*/C5_ALARM_ID,
	helloAlarm /* _alarm_id */};

/* usercode task objects */
c7_HelloWorld_t ALIGN4 __DOSEK_APPDATA_dom1__helloworldTask_user_obj = {/*.c7f3_aobj=*/NULL, /*.class_id=*/C7_HELLOWORLD_ID, /*.c7f1_start=*/0, /*.c7f2_stop=*/0};
KESO_TASKCLASSTYPE *keso_curr_task;


/* Returns a pointer to the currently running Task
 * keso_task_index is initialised with NULL, which
 * represents the INVALID_TASK Java task object.
 */
KESO_TASKCLASSTYPE *keso_curr_task_fkt(void) {
	TaskType taskID;
	GetTaskID(&taskID);
	return keso_task_index[taskID];
}

c6_Thread_t* keso_task_index[KESO_MAX_TASK];

