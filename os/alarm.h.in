namespace os {

class Alarm;

	// FIXME: extern Alarm alarm0;

class Alarm : public AlarmStatic {
	/** \brief task to activate */
	const Task* const task_;
public:
	constexpr Alarm(Counter& counter) : AlarmStatic(counter), task_(0) {}
	constexpr Alarm(Counter& counter, const Task& task) : AlarmStatic(counter), task_(&task) {}


	static forceinline void checkCounter(Counter& counter) {
		// TODO: call all generated alarms
		// if (alarm0.checkTrigger(&counter)) {
		// 	if(alarm0.task_) {
        //         #if DEBUG
		// 		serial << "Alarm trigger" << endl;
        //         #endif

		// 		os::scheduler::scheduler.ActivateTask_impl(*alarm0.task_);
		// 	}
		// }
	}
};

void Alarm_checkCounter(Counter &counter) {
	Alarm::checkCounter(counter);
}

} // os
