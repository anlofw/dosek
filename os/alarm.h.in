#include "counter.h"
#include "alarm.h"

namespace os {

void inlinehint Counter::tick() {
    {{{snippet:increase_counter:name|if(%(name)s.value == %(name)s.maxallowedvalue) {
    %(name)s.value = 0;
} else {
    %(name)s.value++;
}
Alarm::checkCounter(%(name)s);
}}}
    {{{generate:increase_and_check_counters}}}
}

void inlinehint Alarm::checkCounter(const Counter &counter) {
	(void) counter; // unused argument warning might happen

	{{{snippet:alarm_activate_task:alarm|    os::scheduler::scheduler_.ActivateTask_impl(*%(alarm)s.task_);}}}
	{{{snippet:alarm_alarmcallback:callback|    %(callback)s();}}}
    {{{snippet:if_alarm:counter,alarm|if ((&counter == &%(counter)s) && %(alarm)s.checkTrigger(&%(counter)s)) {
    debug << "Alarm triggered" << endl;}}}
    {{{snippet:endif_alarm:counter,alarm|} }}}
    {{{generate:trigger_alarms}}}
}


} // os
